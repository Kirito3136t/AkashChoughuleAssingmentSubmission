// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: stock_transaction.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createStockTransaction = `-- name: CreateStockTransaction :one
INSERT INTO stock_transactions(
    id, 
    user_id,
    stock_id,
    type,      
    quantity,           
    price,   
    created_at 
)
VALUES ($1,$2,$3,$4,$5,$6,$7)
RETURNING id, user_id, stock_id, type, quantity, price, created_at
`

type CreateStockTransactionParams struct {
	ID        uuid.UUID
	UserID    uuid.UUID
	StockID   uuid.UUID
	Type      string
	Quantity  string
	Price     string
	CreatedAt time.Time
}

func (q *Queries) CreateStockTransaction(ctx context.Context, arg CreateStockTransactionParams) (StockTransaction, error) {
	row := q.db.QueryRowContext(ctx, createStockTransaction,
		arg.ID,
		arg.UserID,
		arg.StockID,
		arg.Type,
		arg.Quantity,
		arg.Price,
		arg.CreatedAt,
	)
	var i StockTransaction
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.StockID,
		&i.Type,
		&i.Quantity,
		&i.Price,
		&i.CreatedAt,
	)
	return i, err
}
